#!/usr/bin/env cwl-runner

class: CommandLineTool

description: |
  bedGraphToBigWig v 4 - Convert a bedGraph file to bigWig format.

  usage:
     bedGraphToBigWig in.bedGraph chrom.sizes out.bw
     
  where in.bedGraph is a four column file in the format:
        <chrom> <start> <end> <value>
  and chrom.sizes is a two-column file/URL: <chromosome name> <size in bases>
  and out.bw is the output indexed big wig file.
  If the assembly <db> is hosted by UCSC, chrom.sizes can be a URL like
    http://hgdownload.cse.ucsc.edu/goldenPath/<db>/bigZips/<db>.chrom.sizes
  or you may use the script fetchChromSizes to download the chrom.sizes file.
  If not hosted by UCSC, a chrom.sizes file can be generated by running
  twoBitInfo on the assembly .2bit file.
  The input bedGraph file must be sorted, use the unix sort command:
    sort -k1,1 -k2,2n unsorted.bedGraph > sorted.bedGraph
  options:
     -blockSize=N - Number of items to bundle in r-tree.  Default 256
     -itemsPerSlot=N - Number of data points bundled at lowest level. Default 1024
     -unc - If set, do not use compression.

requirements:
  - import: node-engine.cwl
  - import: envvar-global.cwl
  - import: ucsc-bedGraphToBigWig-docker.cwl

inputs:
  - id: "#input"
    type: File
    inputBinding:
      position: 1

  - id: "#genomeFile"
    type: File
    inputBinding:
      position: 2

  - id: "#bigWig"
    type: string
    inputBinding:
      position: 3

outputs:
  - id: "#bigWigOut"
    type: File
    outputBinding:
      glob: 
        engine: cwl:JsonPointer
        script: /job/bigWig

baseCommand: ["bedGraphToBigWig"]
